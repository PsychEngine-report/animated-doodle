# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib --never install flixel --quiet
          haxelib run lime setup flixel --quiet
          haxelib run lime setup --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib install hxvlc 1.9.0 --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: 'export/release/linux/bin'
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > nul --quiet
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib --never install flixel --quiet
          haxelib run lime setup flixel --quiet
          haxelib run lime setup --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib install hxvlc 1.9.0 --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet 
          haxelib list
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib --never install flixel --quiet
          haxelib run lime setup flixel --quiet
          haxelib run lime setup --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib install hxvlc 1.9.0 --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@vmain
        with:
          name: macBuild
          path: export/release/macos/bin
